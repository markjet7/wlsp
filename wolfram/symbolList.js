[
	{
		"name":"functions",
		"kind":"String",
		"definition":"\"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl\"",
		"children":[
			{
				"name":"sameCountyQ",
				"kind":"Symbol",
				"definition":"sameCountyQ[Pattern[c, Blank[]], Pattern[s, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":6,
							"character":0
						},
						"end":{
							"line":6,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sameCountyQ]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"LoadCountyCSV",
				"kind":"Symbol",
				"definition":"LoadCountyCSV[]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":8,
							"character":0
						},
						"end":{
							"line":8,
							"character":13
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[LoadCountyCSV]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"LoadCountyCSV",
				"kind":"Symbol",
				"definition":"LoadCountyCSV[Pattern[filter, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":12,
							"character":0
						},
						"end":{
							"line":12,
							"character":13
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[LoadCountyCSV]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"LoadCountyGraphics",
				"kind":"Symbol",
				"definition":"LoadCountyGraphics[]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":14,
							"character":0
						},
						"end":{
							"line":14,
							"character":18
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[LoadCountyGraphics]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"LoadCountyGraphics",
				"kind":"Symbol",
				"definition":"LoadCountyGraphics[Pattern[filter, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":25,
							"character":0
						},
						"end":{
							"line":25,
							"character":18
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[LoadCountyGraphics]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"LoadCountyDataGraphics",
				"kind":"Symbol",
				"definition":"LoadCountyDataGraphics[]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":27,
							"character":0
						},
						"end":{
							"line":27,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[LoadCountyDataGraphics]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"LoadCountyDataGraphics",
				"kind":"Symbol",
				"definition":"LoadCountyDataGraphics[Pattern[countyFilter, Blank[]], Pattern[graphicsFilter, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":32,
							"character":0
						},
						"end":{
							"line":32,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[LoadCountyDataGraphics]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"LoadCachedData",
				"kind":"Symbol",
				"definition":"LoadCachedData[]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":37,
							"character":0
						},
						"end":{
							"line":37,
							"character":14
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[LoadCachedData]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"SaveCountyDataGraphics",
				"kind":"Symbol",
				"definition":"SaveCountyDataGraphics[]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":39,
							"character":0
						},
						"end":{
							"line":39,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[SaveCountyDataGraphics]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"data",
				"kind":"Symbol",
				"definition":"data",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":42,
							"character":4
						},
						"end":{
							"line":42,
							"character":8
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[data]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"files",
				"kind":"Symbol",
				"definition":"files",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":43,
							"character":4
						},
						"end":{
							"line":43,
							"character":9
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[files]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"db",
				"kind":"Symbol",
				"definition":"db",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":44,
							"character":4
						},
						"end":{
							"line":44,
							"character":6
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[db]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"row",
				"kind":"Symbol",
				"definition":"row[StringReplace[List[RuleDelayed[StringExpression[Pattern[x, Blank[]], Pattern[y, BlankNullSequence[]]], StringJoin[ToUpperCase[x], y]]]][StringReplace[List[Rule[\"_\", \" \"]]][feed]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":47,
							"character":12
						},
						"end":{
							"line":47,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[row]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"data2",
				"kind":"Symbol",
				"definition":"data2",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":45,
							"character":4
						},
						"end":{
							"line":45,
							"character":9
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[data2]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"SaveFullCountyDataGraphics",
				"kind":"Symbol",
				"definition":"SaveFullCountyDataGraphics[]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":41,
							"character":0
						},
						"end":{
							"line":41,
							"character":26
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[SaveFullCountyDataGraphics]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"MergeCountyDataGraphics",
				"kind":"Symbol",
				"definition":"MergeCountyDataGraphics[Pattern[counties, Blank[]], Pattern[shapes, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":56,
							"character":0
						},
						"end":{
							"line":56,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[MergeCountyDataGraphics]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"GetResources",
				"kind":"Symbol",
				"definition":"GetResources[Pattern[counties, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":65,
							"character":0
						},
						"end":{
							"line":65,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[GetResources]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"bilt",
				"kind":"Symbol",
				"definition":"bilt[Pattern[f, Blank[]], Pattern[p, Blank[]], Pattern[y, Blank[]], Pattern[pu, Blank[]], Pattern[du, Blank[]], Pattern[co2h, Blank[]], Pattern[co2t, Blank[]], Pattern[co2p, Blank[]], Pattern[co2c, Blank[]], Pattern[co2g, Blank[]], Pattern[ctf, Blank[]], Pattern[ctv, Blank[]], Pattern[cc, Blank[]], Pattern[cl, Blank[]], Pattern[co, Blank[]], Pattern[c, Blank[]], Pattern[od, Blank[]], Pattern[pc, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":67,
							"character":0
						},
						"end":{
							"line":67,
							"character":4
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[bilt]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"d",
				"kind":"Symbol",
				"definition":"d",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":89,
							"character":4
						},
						"end":{
							"line":89,
							"character":5
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[d]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"loadBILT",
				"kind":"Symbol",
				"definition":"loadBILT[Optional[Pattern[path, Blank[]], FileNameJoin[List[\".\/\", \"..\", \"data\", \"Example BILT biomass allocation calculation_220316.xlsx\"]]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":88,
							"character":0
						},
						"end":{
							"line":88,
							"character":8
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[loadBILT]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"toTonnes",
				"kind":"Association",
				"definition":"toTonnes",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":93,
							"character":0
						},
						"end":{
							"line":93,
							"character":8
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[toTonnes]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"FilterCountiesRandomly",
				"kind":"Symbol",
				"definition":"FilterCountiesRandomly[Pattern[counties, Blank[]], Pattern[number, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":106,
							"character":0
						},
						"end":{
							"line":106,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[FilterCountiesRandomly]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"FilterSmallestCountiesBySize",
				"kind":"Symbol",
				"definition":"FilterSmallestCountiesBySize[Pattern[counties, Blank[]], Pattern[max, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":108,
							"character":0
						},
						"end":{
							"line":108,
							"character":28
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[FilterSmallestCountiesBySize]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"FilterLargestCountiesBySize",
				"kind":"Symbol",
				"definition":"FilterLargestCountiesBySize[Pattern[counties, Blank[]], Pattern[min, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":110,
							"character":0
						},
						"end":{
							"line":110,
							"character":27
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[FilterLargestCountiesBySize]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"FilterCountiesByProductionFraction",
				"kind":"Symbol",
				"definition":"FilterCountiesByProductionFraction[Pattern[counties, Blank[]], Pattern[fraction, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":112,
							"character":0
						},
						"end":{
							"line":112,
							"character":34
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[FilterCountiesByProductionFraction]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"FilterCountiesByResource",
				"kind":"Symbol",
				"definition":"FilterCountiesByResource[Pattern[counties, Blank[]], Pattern[resource, Blank[String]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":123,
							"character":0
						},
						"end":{
							"line":123,
							"character":24
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[FilterCountiesByResource]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"feedstockGroups",
				"kind":"Association",
				"definition":"feedstockGroups",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":131,
							"character":0
						},
						"end":{
							"line":131,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[feedstockGroups]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"biorefineryFeedstocks",
				"kind":"Symbol",
				"definition":"biorefineryFeedstocks[Pattern[b, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":143,
							"character":0
						},
						"end":{
							"line":143,
							"character":21
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[biorefineryFeedstocks]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"getAvailableFeedstock",
				"kind":"Symbol",
				"definition":"getAvailableFeedstock[Pattern[counties, Blank[]], Optional[Pattern[feedstocks, Blank[]], List[\"Barley straw\", \"Biomass sorghum\", \"Corn stover\", \"Energy cane\", \"Eucalyptus\", \"Miscanthus\", \"Pine\", \"Poplar\", \"Softwood natural residue\", \"Softwood planted residue\", \"Switchgrass\", \"Wheat straw\", \"Willow\"]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":145,
							"character":0
						},
						"end":{
							"line":145,
							"character":21
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[getAvailableFeedstock]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"biorefinery",
				"kind":"Association",
				"definition":"biorefinery",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":162,
							"character":4
						},
						"end":{
							"line":162,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[biorefinery]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"AssignBiorefineriesRandomly",
				"kind":"Symbol",
				"definition":"AssignBiorefineriesRandomly[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":161,
							"character":0
						},
						"end":{
							"line":161,
							"character":27
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[AssignBiorefineriesRandomly]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"allbiorefineries",
				"kind":"Symbol",
				"definition":"allbiorefineries",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":169,
							"character":8
						},
						"end":{
							"line":169,
							"character":24
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[allbiorefineries]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"biorefinery",
				"kind":"Association",
				"definition":"biorefinery",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":170,
							"character":8
						},
						"end":{
							"line":170,
							"character":19
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[biorefinery]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"AssignBiorefineriesByWeight",
				"kind":"Symbol",
				"definition":"AssignBiorefineriesByWeight[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":167,
							"character":0
						},
						"end":{
							"line":167,
							"character":27
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[AssignBiorefineriesByWeight]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"allbiorefineries",
				"kind":"Symbol",
				"definition":"allbiorefineries",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":176,
							"character":4
						},
						"end":{
							"line":176,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[allbiorefineries]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"byCosts",
				"kind":"Symbol",
				"definition":"byCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":177,
							"character":4
						},
						"end":{
							"line":177,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[byCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"AssignBiorefineriesByCost",
				"kind":"Symbol",
				"definition":"AssignBiorefineriesByCost[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":175,
							"character":0
						},
						"end":{
							"line":175,
							"character":25
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[AssignBiorefineriesByCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"shps",
				"kind":"Symbol",
				"definition":"shps",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":184,
							"character":4
						},
						"end":{
							"line":184,
							"character":8
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[shps]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"rescaled",
				"kind":"Symbol",
				"definition":"rescaled",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":185,
							"character":4
						},
						"end":{
							"line":185,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[rescaled]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"out",
				"kind":"Symbol",
				"definition":"out",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":186,
							"character":4
						},
						"end":{
							"line":186,
							"character":7
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[out]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"plotCounties",
				"kind":"Symbol",
				"definition":"plotCounties[Pattern[counties, Blank[]], Pattern[factor, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":183,
							"character":0
						},
						"end":{
							"line":183,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[plotCounties]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"myGeoDistance",
				"kind":"Symbol",
				"definition":"myGeoDistance[from, to]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":197,
							"character":27
						},
						"end":{
							"line":197,
							"character":40
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[myGeoDistance]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"myGeoDistance",
				"kind":"Symbol",
				"definition":"myGeoDistance[Pattern[from, Blank[]], Pattern[to, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":197,
							"character":0
						},
						"end":{
							"line":197,
							"character":13
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[myGeoDistance]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"sortedCountiesByDistance",
				"kind":"Symbol",
				"definition":"sortedCountiesByDistance",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":200,
							"character":4
						},
						"end":{
							"line":200,
							"character":28
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sortedCountiesByDistance]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"gatheredBiomass",
				"kind":"Symbol",
				"definition":"gatheredBiomass",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":201,
							"character":4
						},
						"end":{
							"line":201,
							"character":19
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[gatheredBiomass]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"totalBiomass",
				"kind":"Symbol",
				"definition":"totalBiomass",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":203,
							"character":8
						},
						"end":{
							"line":203,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[totalBiomass]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"totalProduct",
				"kind":"Symbol",
				"definition":"totalProduct",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":204,
							"character":8
						},
						"end":{
							"line":204,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[totalProduct]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"collectionCosts",
				"kind":"Symbol",
				"definition":"collectionCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":205,
							"character":8
						},
						"end":{
							"line":205,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[collectionCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"deliveryCosts",
				"kind":"Symbol",
				"definition":"deliveryCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":206,
							"character":8
						},
						"end":{
							"line":206,
							"character":21
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[deliveryCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"capitalCosts",
				"kind":"Symbol",
				"definition":"capitalCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":207,
							"character":8
						},
						"end":{
							"line":207,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[capitalCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"operatingCosts",
				"kind":"Symbol",
				"definition":"operatingCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":208,
							"character":8
						},
						"end":{
							"line":208,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[operatingCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"getCostsByCapacity",
				"kind":"Symbol",
				"definition":"getCostsByCapacity[Pattern[deployments, Blank[]], Pattern[biorefinery, Blank[]], Pattern[counties, Blank[List]], Optional[Pattern[max, Blank[]], 2*^6]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":199,
							"character":0
						},
						"end":{
							"line":199,
							"character":18
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[getCostsByCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"sortedCountiesByDistance",
				"kind":"Symbol",
				"definition":"sortedCountiesByDistance",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":226,
							"character":4
						},
						"end":{
							"line":226,
							"character":28
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sortedCountiesByDistance]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"gatheredBiomass",
				"kind":"Symbol",
				"definition":"gatheredBiomass",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":227,
							"character":4
						},
						"end":{
							"line":227,
							"character":19
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[gatheredBiomass]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"pastCost",
				"kind":"Symbol",
				"definition":"pastCost",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":228,
							"character":4
						},
						"end":{
							"line":228,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[pastCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"optimalCapacity",
				"kind":"Symbol",
				"definition":"optimalCapacity",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":229,
							"character":4
						},
						"end":{
							"line":229,
							"character":19
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[optimalCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"totalBiomass",
				"kind":"Symbol",
				"definition":"totalBiomass",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":231,
							"character":8
						},
						"end":{
							"line":231,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[totalBiomass]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"totalProduct",
				"kind":"Symbol",
				"definition":"totalProduct",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":232,
							"character":8
						},
						"end":{
							"line":232,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[totalProduct]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"collectionCosts",
				"kind":"Symbol",
				"definition":"collectionCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":233,
							"character":8
						},
						"end":{
							"line":233,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[collectionCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"deliveryCosts",
				"kind":"Symbol",
				"definition":"deliveryCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":234,
							"character":8
						},
						"end":{
							"line":234,
							"character":21
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[deliveryCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"capitalCosts",
				"kind":"Symbol",
				"definition":"capitalCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":235,
							"character":8
						},
						"end":{
							"line":235,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[capitalCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"operatingCosts",
				"kind":"Symbol",
				"definition":"operatingCosts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":236,
							"character":8
						},
						"end":{
							"line":236,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[operatingCosts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"totalCost",
				"kind":"Symbol",
				"definition":"totalCost",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":237,
							"character":8
						},
						"end":{
							"line":237,
							"character":17
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[totalCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"optimalCost",
				"kind":"Symbol",
				"definition":"optimalCost",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":238,
							"character":38
						},
						"end":{
							"line":238,
							"character":49
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[optimalCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"pastCost",
				"kind":"Symbol",
				"definition":"pastCost",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":238,
							"character":73
						},
						"end":{
							"line":238,
							"character":81
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[pastCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"getLowestCostByCapacity",
				"kind":"Symbol",
				"definition":"getLowestCostByCapacity[Pattern[deployments, Blank[]], Pattern[biorefinery, Blank[]], Pattern[counties, Blank[List]], Optional[Pattern[max, Blank[]], 2*^6]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":225,
							"character":0
						},
						"end":{
							"line":225,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[getLowestCostByCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"totalProduction",
				"kind":"Symbol",
				"definition":"totalProduction[Pattern[counties, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":257,
							"character":0
						},
						"end":{
							"line":257,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[totalProduction]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"getClusters",
				"kind":"Symbol",
				"definition":"getClusters[Pattern[counties, Blank[]], Optional[Pattern[n, Blank[]], 30]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":259,
							"character":0
						},
						"end":{
							"line":259,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[getClusters]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"btToBilt",
				"kind":"Association",
				"definition":"btToBilt",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":269,
							"character":0
						},
						"end":{
							"line":269,
							"character":8
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[btToBilt]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"largestResources",
				"kind":"Symbol",
				"definition":"largestResources",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":287,
							"character":4
						},
						"end":{
							"line":287,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[largestResources]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"weights",
				"kind":"Symbol",
				"definition":"weights",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":290,
							"character":8
						},
						"end":{
							"line":290,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[weights]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"choices",
				"kind":"Symbol",
				"definition":"choices",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":289,
							"character":4
						},
						"end":{
							"line":289,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[choices]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"filterByFeedstockWeight",
				"kind":"Symbol",
				"definition":"filterByFeedstockWeight[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]], Pattern[s, Blank[]], Pattern[placed, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":286,
							"character":0
						},
						"end":{
							"line":286,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[filterByFeedstockWeight]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"filterByWeights",
				"kind":"Symbol",
				"definition":"filterByWeights[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]], Pattern[s, Blank[]], Pattern[placed, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":306,
							"character":0
						},
						"end":{
							"line":306,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[filterByWeights]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"filterBySmallestCost",
				"kind":"Symbol",
				"definition":"filterBySmallestCost[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]], Pattern[s, Blank[]], Pattern[placed, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":310,
							"character":0
						},
						"end":{
							"line":310,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[filterBySmallestCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"capitalCost",
				"kind":"Symbol",
				"definition":"capitalCost[Pattern[m, Blank[]], Pattern[m0, Blank[]], Pattern[c0, Blank[]], Optional[Pattern[n, Blank[]], 0.7], Optional[Pattern[i, Blank[]], 0.13]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":321,
							"character":0
						},
						"end":{
							"line":321,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[capitalCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"collectionCost",
				"kind":"Symbol",
				"definition":"collectionCost[Pattern[m, Blank[]], Optional[Pattern[cf0, Blank[]], 3.103], Pattern[cv0, Blank[]], Optional[Pattern[y0, Blank[]], 3200], Optional[Pattern[f0, Blank[]], 0.6], Optional[Pattern[t, Blank[]], 1.5]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":322,
							"character":0
						},
						"end":{
							"line":322,
							"character":14
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[collectionCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"deliveryCost",
				"kind":"Symbol",
				"definition":"deliveryCost[Pattern[m, Blank[]], Pattern[d, Blank[]], Optional[Pattern[d0, Blank[]], 25], Optional[Pattern[c0, Blank[]], 0.71], Optional[Pattern[m0, Blank[]], Times[2000, 330]], Optional[Pattern[t, Blank[]], 1.5]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":323,
							"character":0
						},
						"end":{
							"line":323,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[deliveryCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"operatingCost",
				"kind":"Symbol",
				"definition":"operatingCost[Pattern[m, Blank[]], Pattern[m0, Blank[]], Pattern[o0, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":324,
							"character":0
						},
						"end":{
							"line":324,
							"character":13
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[operatingCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"co2CaptureCost",
				"kind":"Symbol",
				"definition":"co2CaptureCost[Pattern[co2, Blank[]], Optional[Pattern[co20, Blank[]], 5391.09], Optional[Pattern[c0, Blank[]], 233.92], Optional[Pattern[n, Blank[]], 0.61], Optional[Pattern[op0, Blank[]], 0.064], Optional[Pattern[i, Blank[]], 0.13]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":331,
							"character":0
						},
						"end":{
							"line":331,
							"character":14
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[co2CaptureCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"co2CompressionCost",
				"kind":"Symbol",
				"definition":"co2CompressionCost[Pattern[co2, Blank[]], Optional[Pattern[co20, Blank[]], 4848.94], Optional[Pattern[c0, Blank[]], 30.38], Optional[Pattern[n, Blank[]], 0.77], Optional[Pattern[op0, Blank[]], 0.073], Optional[Pattern[i, Blank[]], 0.13]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":332,
							"character":0
						},
						"end":{
							"line":332,
							"character":18
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[co2CompressionCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"h2liquefactionCost",
				"kind":"Symbol",
				"definition":"h2liquefactionCost[Pattern[h2, Blank[]], Optional[Pattern[c0, Blank[]], 7.23], Optional[Pattern[n, Blank[]], 0.8], Optional[Pattern[op0, Blank[]], 8.763]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":333,
							"character":0
						},
						"end":{
							"line":333,
							"character":18
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[h2liquefactionCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"sortedCounties",
				"kind":"Symbol",
				"definition":"sortedCounties",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":340,
							"character":4
						},
						"end":{
							"line":340,
							"character":18
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sortedCounties]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"costs",
				"kind":"Symbol",
				"definition":"costs",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":341,
							"character":1
						},
						"end":{
							"line":341,
							"character":6
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[costs]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"sites",
				"kind":"Symbol",
				"definition":"sites",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":342,
							"character":1
						},
						"end":{
							"line":342,
							"character":6
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sites]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"m",
				"kind":"Symbol",
				"definition":"m",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":343,
							"character":1
						},
						"end":{
							"line":343,
							"character":2
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[m]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"p",
				"kind":"Symbol",
				"definition":"p",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":344,
							"character":1
						},
						"end":{
							"line":344,
							"character":2
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[p]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"o",
				"kind":"Symbol",
				"definition":"o",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":345,
							"character":1
						},
						"end":{
							"line":345,
							"character":2
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[o]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"cap",
				"kind":"Symbol",
				"definition":"cap",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":346,
							"character":1
						},
						"end":{
							"line":346,
							"character":4
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[cap]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"co2c",
				"kind":"Symbol",
				"definition":"co2c",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":348,
							"character":4
						},
						"end":{
							"line":348,
							"character":8
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[co2c]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"co2p",
				"kind":"Symbol",
				"definition":"co2p",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":349,
							"character":4
						},
						"end":{
							"line":349,
							"character":8
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[co2p]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"co2cap",
				"kind":"Symbol",
				"definition":"co2cap",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":352,
							"character":4
						},
						"end":{
							"line":352,
							"character":10
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[co2cap]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"co2comp",
				"kind":"Symbol",
				"definition":"co2comp",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":353,
							"character":4
						},
						"end":{
							"line":353,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[co2comp]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"c",
				"kind":"Symbol",
				"definition":"c",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":355,
							"character":1
						},
						"end":{
							"line":355,
							"character":2
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[c]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"d",
				"kind":"Symbol",
				"definition":"d",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":356,
							"character":1
						},
						"end":{
							"line":356,
							"character":2
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[d]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"biorefineryCost",
				"kind":"Symbol",
				"definition":"biorefineryCost[Pattern[site, Blank[List]], Pattern[counties, Blank[]], Pattern[biorefinery, Blank[]], PatternTest[Pattern[capacity, Blank[]], NumberQ]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":337,
							"character":0
						},
						"end":{
							"line":337,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[biorefineryCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"nearestCounty",
				"kind":"Symbol",
				"definition":"nearestCounty",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":365,
							"character":2
						},
						"end":{
							"line":365,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[nearestCounty]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"availableFeedstock",
				"kind":"Symbol",
				"definition":"availableFeedstock",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":366,
							"character":2
						},
						"end":{
							"line":366,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[availableFeedstock]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"newFeedstock",
				"kind":"Symbol",
				"definition":"newFeedstock",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":367,
							"character":2
						},
						"end":{
							"line":367,
							"character":14
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[newFeedstock]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"c",
				"kind":"Symbol",
				"definition":"c",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":368,
							"character":2
						},
						"end":{
							"line":368,
							"character":3
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[c]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"d",
				"kind":"Symbol",
				"definition":"d",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":369,
							"character":2
						},
						"end":{
							"line":369,
							"character":3
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[d]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"p",
				"kind":"Symbol",
				"definition":"p",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":370,
							"character":2
						},
						"end":{
							"line":370,
							"character":3
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[p]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"costsBySite",
				"kind":"Symbol",
				"definition":"costsBySite[Pattern[site, Blank[List]], Pattern[counties, Blank[]], Pattern[biorefinery, Blank[Association]], Pattern[capacity, Blank[]], Pattern[gathered, Blank[]], Pattern[costs, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":361,
							"character":0
						},
						"end":{
							"line":361,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[costsBySite]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"plotBiorefineryCostByCapacity",
				"kind":"Symbol",
				"definition":"plotBiorefineryCostByCapacity[Pattern[site, Blank[]], Pattern[counties, Blank[]], Pattern[biorefinery, Blank[]], Pattern[min, Blank[]], Pattern[max, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":379,
							"character":0
						},
						"end":{
							"line":379,
							"character":29
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[plotBiorefineryCostByCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"result",
				"kind":"Symbol",
				"definition":"result",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":397,
							"character":16
						},
						"end":{
							"line":397,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[result]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"f",
				"kind":"Symbol",
				"definition":"f[PatternTest[Pattern[x0, Blank[]], NumericQ]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":395,
							"character":8
						},
						"end":{
							"line":395,
							"character":9
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[f]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"sol",
				"kind":"Symbol",
				"definition":"sol",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":400,
							"character":8
						},
						"end":{
							"line":400,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sol]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"optimalBiorefineryCapacityCost",
				"kind":"Symbol",
				"definition":"optimalBiorefineryCapacityCost[Pattern[site, Blank[List]], Pattern[counties0, Blank[]], Pattern[biorefinery, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":393,
							"character":0
						},
						"end":{
							"line":393,
							"character":30
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[optimalBiorefineryCapacityCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"aviationBiorefineries",
				"kind":"Symbol",
				"definition":"aviationBiorefineries",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":411,
							"character":8
						},
						"end":{
							"line":411,
							"character":29
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[aviationBiorefineries]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"jetFuelFirst",
				"kind":"Symbol",
				"definition":"jetFuelFirst[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]], Pattern[site, Blank[]], Pattern[placed, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":409,
							"character":0
						},
						"end":{
							"line":409,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[jetFuelFirst]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"aviationBiorefineries",
				"kind":"Symbol",
				"definition":"aviationBiorefineries",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":424,
							"character":8
						},
						"end":{
							"line":424,
							"character":29
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[aviationBiorefineries]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"filterJetFuelFirstThenByWeight",
				"kind":"Symbol",
				"definition":"filterJetFuelFirstThenByWeight[Pattern[counties, Blank[]], Pattern[biorefineries, Blank[]], Pattern[site, Blank[]], Pattern[placed, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":421,
							"character":0
						},
						"end":{
							"line":421,
							"character":30
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[filterJetFuelFirstThenByWeight]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"MessageName",
				"kind":"Symbol",
				"definition":"MessageName[PlaceRefineries, \"usage\"]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":435,
							"character":0
						},
						"end":{
							"line":435,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[MessageName]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"gs",
				"kind":"Symbol",
				"definition":"gs",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":440,
							"character":8
						},
						"end":{
							"line":440,
							"character":10
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[gs]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"rs",
				"kind":"Symbol",
				"definition":"rs",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":444,
							"character":20
						},
						"end":{
							"line":444,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[rs]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"ns",
				"kind":"Symbol",
				"definition":"ns",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":446,
							"character":20
						},
						"end":{
							"line":446,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[ns]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"nb0",
				"kind":"Symbol",
				"definition":"nb0",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":448,
							"character":20
						},
						"end":{
							"line":448,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[nb0]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"sb",
				"kind":"Symbol",
				"definition":"sb",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":450,
							"character":24
						},
						"end":{
							"line":450,
							"character":26
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sb]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"obc",
				"kind":"Symbol",
				"definition":"obc",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":453,
							"character":32
						},
						"end":{
							"line":453,
							"character":35
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[obc]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"results07",
				"kind":"Symbol",
				"definition":"results07",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":441,
							"character":8
						},
						"end":{
							"line":441,
							"character":17
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[results07]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"PlaceRefineries",
				"kind":"Symbol",
				"definition":"PlaceRefineries[Pattern[data, Blank[]], Pattern[sites, Blank[]], Pattern[filter, Blank[]], Pattern[biorefineries, Blank[]], Optional[Pattern[minCapacity, Blank[]], 30000]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":437,
							"character":0
						},
						"end":{
							"line":437,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[PlaceRefineries]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"site",
				"kind":"Symbol",
				"definition":"site",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":475,
							"character":8
						},
						"end":{
							"line":475,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[site]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"feedstocks",
				"kind":"Symbol",
				"definition":"feedstocks",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":477,
							"character":8
						},
						"end":{
							"line":477,
							"character":18
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[feedstocks]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"sources",
				"kind":"Symbol",
				"definition":"sources",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":478,
							"character":8
						},
						"end":{
							"line":478,
							"character":15
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[sources]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"List",
				"kind":"Symbol",
				"definition":"List[m, r]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":479,
							"character":9
						},
						"end":{
							"line":479,
							"character":10
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[List]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"co2c",
				"kind":"Symbol",
				"definition":"co2c",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":480,
							"character":8
						},
						"end":{
							"line":480,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[co2c]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"p",
				"kind":"Symbol",
				"definition":"p",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":481,
							"character":8
						},
						"end":{
							"line":481,
							"character":9
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[p]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"gathered",
				"kind":"Symbol",
				"definition":"gathered",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":482,
							"character":8
						},
						"end":{
							"line":482,
							"character":16
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[gathered]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"gatherBiomass",
				"kind":"Symbol",
				"definition":"gatherBiomass[Pattern[counties, Blank[]], Pattern[biorefinery, Blank[]], Optional[Pattern[n, Blank[]], 1], Optional[Pattern[r0, Blank[]], Infinity]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":473,
							"character":0
						},
						"end":{
							"line":473,
							"character":13
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[gatherBiomass]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"GroupBiorefineriesBy",
				"kind":"Symbol",
				"definition":"GroupBiorefineriesBy[Pattern[results, Blank[]], Pattern[category, Blank[]], Pattern[value, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":493,
							"character":0
						},
						"end":{
							"line":493,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[GroupBiorefineriesBy]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"GroupBiorefineriesByTwo",
				"kind":"Symbol",
				"definition":"GroupBiorefineriesByTwo[Pattern[results, Blank[]], Pattern[category1, Blank[]], Pattern[category2, Blank[]], Pattern[value, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":500,
							"character":0
						},
						"end":{
							"line":500,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[GroupBiorefineriesByTwo]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"SummarizeBiorefineriesBy",
				"kind":"Symbol",
				"definition":"SummarizeBiorefineriesBy[Pattern[results, Blank[]], Pattern[category, Blank[]], Pattern[value, Blank[]], Pattern[function, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":507,
							"character":0
						},
						"end":{
							"line":507,
							"character":24
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[SummarizeBiorefineriesBy]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"ChartBiorefineriesBy",
				"kind":"Symbol",
				"definition":"ChartBiorefineriesBy[Pattern[groups, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":512,
							"character":0
						},
						"end":{
							"line":512,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[ChartBiorefineriesBy]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"byFeedstockCapacity",
				"kind":"Symbol",
				"definition":"byFeedstockCapacity",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":547,
							"character":4
						},
						"end":{
							"line":547,
							"character":23
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[byFeedstockCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"byFeedstockCost",
				"kind":"Symbol",
				"definition":"byFeedstockCost",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":548,
							"character":4
						},
						"end":{
							"line":548,
							"character":19
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[byFeedstockCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"byProductCapacity",
				"kind":"Symbol",
				"definition":"byProductCapacity",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":549,
							"character":4
						},
						"end":{
							"line":549,
							"character":21
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[byProductCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"totalsByFeedstockCapacity",
				"kind":"Symbol",
				"definition":"totalsByFeedstockCapacity",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":551,
							"character":4
						},
						"end":{
							"line":551,
							"character":29
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[totalsByFeedstockCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"meansByProductCost",
				"kind":"Symbol",
				"definition":"meansByProductCost",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":552,
							"character":4
						},
						"end":{
							"line":552,
							"character":22
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[meansByProductCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"byFeedstockProductCapacity",
				"kind":"Symbol",
				"definition":"byFeedstockProductCapacity",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":554,
							"character":4
						},
						"end":{
							"line":554,
							"character":30
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[byFeedstockProductCapacity]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"plot1",
				"kind":"Symbol",
				"definition":"plot1",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":585,
							"character":4
						},
						"end":{
							"line":585,
							"character":9
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[plot1]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"plot2",
				"kind":"Symbol",
				"definition":"plot2",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":587,
							"character":4
						},
						"end":{
							"line":587,
							"character":9
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[plot2]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"grouped",
				"kind":"Symbol",
				"definition":"grouped",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":590,
							"character":4
						},
						"end":{
							"line":590,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[grouped]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"g",
				"kind":"Symbol",
				"definition":"g",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":594,
							"character":4
						},
						"end":{
							"line":594,
							"character":5
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[g]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"grouped",
				"kind":"Symbol",
				"definition":"grouped",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":605,
							"character":4
						},
						"end":{
							"line":605,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[grouped]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"byFeedstockProductCapacityCounts",
				"kind":"Symbol",
				"definition":"byFeedstockProductCapacityCounts",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":623,
							"character":4
						},
						"end":{
							"line":623,
							"character":36
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[byFeedstockProductCapacityCounts]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"byFeedstockProductCapacityCountsSorted",
				"kind":"Symbol",
				"definition":"byFeedstockProductCapacityCountsSorted",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":629,
							"character":4
						},
						"end":{
							"line":629,
							"character":42
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[byFeedstockProductCapacityCountsSorted]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"capByCost",
				"kind":"Symbol",
				"definition":"capByCost",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":641,
							"character":4
						},
						"end":{
							"line":641,
							"character":13
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[capByCost]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"linearFits",
				"kind":"Symbol",
				"definition":"linearFits",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":647,
							"character":4
						},
						"end":{
							"line":647,
							"character":14
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[linearFits]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"p1",
				"kind":"Symbol",
				"definition":"p1",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":652,
							"character":4
						},
						"end":{
							"line":652,
							"character":6
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[p1]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"p2",
				"kind":"Symbol",
				"definition":"p2",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":661,
							"character":4
						},
						"end":{
							"line":661,
							"character":6
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[p2]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"postResults",
				"kind":"Symbol",
				"definition":"postResults[Pattern[results, Blank[]], Pattern[label, Blank[]]]",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl",
					"range":{
						"start":{
							"line":546,
							"character":0
						},
						"end":{
							"line":546,
							"character":11
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[postResults]",
				"icon":"symbol-variable",
				"collapsibleState":1
			}
		],
		"lazyload":"Map[symbolToTreeItem2, getSymbols[\"(* ::Package:: *)\\n\\n(* files = FileNames[\\\"*.csv\\\", \\n   \\\".\/\\\" <> \\\"data\/billion_ton\\\"];\\ndb = <|StringTake[FileBaseName[#], {17, -1}] -> Import[#, \\\"CSV\\\"] & \/@ \\n    files[[1 ;;]]|>; *)\\nsameCountyQ[c_, s_]:=(c[\\\"County\\\"] == (s[\\\"CountyG\\\"]) && c[\\\"State\\\"] == s[\\\"StateG\\\"]);\\n\\nLoadCountyCSV[]:=Import[FileNameJoin[{\\\".\/\\\", \\\"..\\\", \\\"data\\\",\\\"billionton_county_download20211119-044647.csv\\\", \\\"billionton_county_download20211119-044647.csv\\\"}], \\\"CSV\\\"] \/\/ \\n    Map[Function[{row}, AssociationThread[First@# -> row] ], Rest@#] &;\\n\\n\\nLoadCountyCSV[filter_]:=LoadCountyCSV[] \/\/ filter;\\n\\nLoadCountyGraphics[]:= Function[{shpfile},MapThread[\\n        <|\\\"CountyG\\\" -> #1, \\\"StateG\\\" -> #2, \\\"Lat\\\" -> #3, \\\"Lon\\\" -> #4, \\\"Graphics\\\" -> #5|> &,\\n        {\\n            First@(\\\"COUNTY\\\" \/. (\\\"LabeledData\\\" \/. shpfile)),\\n            First@(\\\"STATE\\\" \/. (\\\"LabeledData\\\" \/. shpfile)),\\n            First@(\\\"LATITUDE\\\" \/. (\\\"LabeledData\\\" \/. shpfile)),\\n            First@(\\\"LONGITUDE\\\" \/. (\\\"LabeledData\\\" \/. shpfile)),\\n            First@(\\\"Geometry\\\" \/. shpfile)\\n        }\\n    ]][Import[FileNameJoin[{\\\".\/\\\", \\\"..\\\", \\\"data\\\",\\\"agmap\\\", \\\"agmap.shp\\\"}], {\\\"SHP\\\", \\\"Data\\\"}]];\\n\\nLoadCountyGraphics[filter_]:= LoadCountyGraphics[] \/\/ filter;\\n\\nLoadCountyDataGraphics[]:= MergeCountyDataGraphics[\\n    LoadCountyCSV[],\\n    LoadCountyGraphics[]\\n];\\n\\nLoadCountyDataGraphics[countyFilter_, graphicsFilter_]:= MergeCountyDataGraphics[\\n    LoadCountyCSV[countyFilter],\\n    LoadCountyGraphics[graphicsFilter]\\n];\\n\\nLoadCachedData[] :=Import[FileNameJoin[{\\\".\/\\\", \\\"data\\\",\\\"county_data.mx\\\"}]];\\n\\nSaveCountyDataGraphics[]:= Export[FileNameJoin[{\\\".\/\\\", \\\"data\\\",\\\"county_data.mx\\\"}], Select[LoadCountyDataGraphics[], KeyExistsQ[#, \\\"Resource\\\"] &], \\\"WXF\\\"];\\n\\nSaveFullCountyDataGraphics[]:=Module[{data, data2, files, db},\\n    data = Select[LoadCountyDataGraphics[], KeyExistsQ[#, \\\"Resource\\\"] &];\\n    files = FileNames[\\\"*.csv\\\", \\\".\/\\\" <> \\\"data\/billion_ton\\\"];\\n    db = <|StringTake[FileBaseName[#], {17,-1}] -> Import[#, \\\"CSV\\\"] &\/@ files|>;\\n    data2 = Table[\\n        Table[\\n            row[feed \/\/ StringReplace[{\\\"_\\\" -> \\\" \\\"}] \/\/ StringReplace[{x_~~y___:>ToUpperCase@x <> y}]] = SelectFirst[db[feed], #[[3]] == row[\\\"County\\\"] && #[[2]] == row[\\\"StateFull\\\"] &, {0, 0, 0, 0}][[4]],\\n            {feed, Keys@db}\\n        ];\\n        row,\\n        {row, data}\\n    ];\\n    Export[FileNameJoin[{\\\".\/\\\", \\\"data\\\",\\\"full_county_data.mx\\\"}], data2, \\\"WXF\\\"];\\n];\\n\\nMergeCountyDataGraphics[counties_, shapes_]:=Map[\\n    Function[{shape},\\n        Check[Join[shape, SelectFirst[counties, sameCountyQ[#, shape] &]], shape]\\n    ],\\n    shapes\\n];\\n\\n\\n\\nGetResources[counties_]:=DeleteDuplicates[counties[[All, \\\"Resource\\\"]]]\\n\\nbilt[f_, p_, y_, pu_, du_, co2h_, co2t_, co2p_, co2c_, co2g_, ctf_, ctv_, cc_, cl_, co_, c_, od_, pc_]:= <|\\n        \\\"feedstock\\\" -> f,\\n        \\\"product\\\" -> p, \\n        \\\"conversion\\\" -> y,\\n        \\\"product units\\\" -> pu,\\n        \\\"demand units\\\" -> du,\\n        \\\"co2 harvesting\\\" -> co2h,\\n        \\\"co2 transportation\\\" -> co2t,\\n        \\\"co2 production\\\" -> co2p,\\n        \\\"co2 captured\\\" -> co2c,\\n        \\\"co2 gen used\\\" -> co2g,\\n        \\\"cost transportation fixed\\\" -> ctf,\\n        \\\"cost transportation variable\\\" -> ctv,\\n        \\\"cost capital\\\" -> cc,\\n        \\\"cost lifetime\\\" -> cl,\\n        \\\"cost operating\\\" -> co,\\n        \\\"capacity\\\" -> c,\\n        \\\"operating days\\\" -> od,\\n        \\\"production cost\\\" -> pc\\n    |>;\\n\\nloadBILT[path_:FileNameJoin[{\\\".\/\\\", \\\"..\\\", \\\"data\\\",\\\"Example BILT biomass allocation calculation_220316.xlsx\\\"}]] := Module[{d}, \\n    d = Import[path, \\\"XLSX\\\"][[1]];\\n    Map[Apply[bilt, #] &, d[[4;;, 7;;24]]]\\n];\\n\\ntoTonnes = <|\\n    \\\"bu\\\" -> 56\/2205,\\n    \\\"lb\\\" -> 1\/2205,\\n    \\\"dt\\\" -> 1,\\n    \\\"null\\\" -> 0\\n|>;\\n\\n\\n\\n(* ::Section:: *)\\n(*Filter Functions*)\\n\\n\\nFilterCountiesRandomly[counties_, number_]:= RandomSample[counties, number]\\n\\nFilterSmallestCountiesBySize[counties_, max_]:=Select[counties, #[\\\"Production\\\"]*units[#[\\\"Production Unit\\\"]] <= max &];\\n\\nFilterLargestCountiesBySize[counties_, min_]:=Select[counties, #[\\\"Production\\\"]*units[#[\\\"Production Unit\\\"]] >= min &];\\n\\nFilterCountiesByProductionFraction[counties_, fraction_]:=Fold[\\n    Function[{all, next}, If[\\n         Total[all[[All, \\\"Production\\\"]]*(units \/@ all[[All, \\\"Production Unit\\\"]])] \/\\n    Total[counties[[All, \\\"Production\\\"]]*(units \/@ counties[[All, \\\"Production Unit\\\"]])] <= fraction,\\n    Append[all, next],\\n    all\\n    ]], \\n    {First@counties},\\n    Rest@counties\\n];\\n\\nFilterCountiesByResource[counties_, resource_String]:=Select[counties, #[\\\"Resource\\\"] === resource &];\\n\\n\\n\\n(* ::Section:: *)\\n(*Analyze Resources*)\\n\\n\\nfeedstockGroups = <|\\n    \\\"Forestry\\\" -> {\\\"Hardwood, lowland logging residues\\\", \\\"Hardwood, upland logging residues\\\", \\\"Other forest residue\\\", \\\"Other forest thinnings\\\", \\\"Hardwood, lowland whole trees\\\", \\\"Hardwood, upland whole trees\\\", \\\"Mixedwood logging residues\\\", \\\"Mixedwood whole trees\\\", \\\"Primary mill residue\\\", \\\"Secondary mill residue\\\", \\\"Softwood, natural logging residues\\\", \\\"Softwood, natural whole trees\\\", \\\"Softwood, planted logging residues\\\", \\\"Softwood, planted whole trees\\\"},\\n    \\\"Straws\\\" -> {\\\"Barley straw\\\", \\\"Wheat straw\\\", \\\"Barley\\\",\\\"Hay\\\",\\\"Oats straw\\\",  \\\"Wheat\\\", \\\"Biomass sorghum\\\"},\\n    \\\"Switchgrass\\\" -> {\\\"Switchgrass\\\", \\\"Miscanthus\\\"},\\n    \\\"Wood\\\" -> {\\\"Poplar\\\", \\\"Pine\\\", \\\"Willow\\\", \\\"Eucalyptus\\\"},\\n    \\\"Agriculture\\\" -> {\\\"Corn stover\\\", \\\"Rice straw\\\", \\\"Cotton residue\\\", \\\"Sugarcane bagasse\\\", \\\"Noncitrus residues\\\", \\\"Tree nut residues\\\", \\\"Citrus residues\\\", \\\"Rice hulls\\\", \\\"Sugarcane trash\\\", \\\"Hog manure\\\", \\\"Milk cow manure\\\"},\\n    \\\"Other Sugars\\\" -> {\\\"Energy cane\\\", \\\"Sorghum\\\"},\\n    \\\"Corn Grain\\\" -> {\\\"Corn\\\"},\\n    \\\"MSW\\\" -> {\\\"Construction & demolition waste\\\", \\\"Paper and paperboard\\\", \\\"Other municipal solid waste\\\", \\\"Food waste\\\", \\\"Cotton gin trash\\\", \\\"Municipal solid waste wood\\\", \\\"Yard trimmings\\\"},\\n    \\\"Oils\\\" -> {\\\"Soybeans\\\"},\\n    \\\"Other\\\" -> { \\\"Cotton\\\",  \\\"Idle Land\\\", \\\"Oats\\\", \\\"Pastureland available\\\", \\\"Plastics\\\", \\\"Rice\\\", \\\"Rubber and leather\\\", \\\"Sorghum stubble\\\", \\\"Textiles\\\"}\\n|>;\\nbiorefineryFeedstocks[b_]:=Select[feedstockGroups, MemberQ[#, b[\\\"feedstock\\\"]] &]\\n\\ngetAvailableFeedstock[counties_, feedstocks_ : {\\\"Barley straw\\\", \\\"Biomass sorghum\\\",\\n     \\\"Corn stover\\\", \\\"Energy cane\\\", \\\"Eucalyptus\\\",\\n     \\\"Miscanthus\\\", \\\"Pine\\\", \\\"Poplar\\\", \\\"Softwood natural residue\\\", \\\"Softwood planted residue\\\",\\n     \\\"Switchgrass\\\", \\\"Wheat straw\\\", \\\"Willow\\\"}] :=\\n    Module[{},\\n        GroupBy[Flatten[Table[{f, c[\\\"CountyG\\\"], c[f]}, {c, counties},\\n             {f, feedstocks}], 1], First, Total[#[[All, 3]]]&] \/\/\\n        Sort \/\/\\n        Reverse\\n    ]\\n\\n\\n(* ::Section:: *)\\n(*Biorefinery Assignment Section*)\\n\\n\\nAssignBiorefineriesRandomly[counties_, biorefineries_]:=Module[{biorefinery}, Table[\\n    biorefinery = RandomChoice[Select[biorefineries, #BiorefineryFeedstock === county[\\\"Resource\\\"] &]];\\n    Join[county, biorefinery],\\n    {county, counties}\\n]];\\n\\nAssignBiorefineriesByWeight[counties_, biorefineries_]:=Module[{allbiorefineries, biorefinery},\\n    Table[\\n        allbiorefineries = Select[biorefineries, #BiorefineryFeedstock === county[\\\"Resource\\\"] &];\\n        biorefinery = RandomChoice[allbiorefineries[[All, \\\"BiorefineryWeight\\\"]] -> allbiorefineries];\\n        Join[county, biorefinery],\\n        {county, counties}\\n]];\\n\\nAssignBiorefineriesByCost[counties_, biorefineries_]:=Table[\\n    allbiorefineries = Select[biorefineries, #BiorefineryFeedstock === county[\\\"Resource\\\"] &];\\n    byCosts = Map[{#, BiorefineryCountyCost[county, #]} &, allbiorefineries];\\n    Join[county, SortBy[byCosts, Last][[1, 1]]],\\n\\n    {county, counties}\\n];\\n\\nplotCounties[counties_, factor_]:=Module[{shps, rescaled, out},\\n    shps = LoadCountyGraphics[];\\n    rescaled = MapThread[Join[#1, <|\\\"output\\\" -> #2|>] &, {counties, Rescale[counties[[All, factor]]]}];\\n    out = Map[\\n        Function[{s}, Join[s, <|\\\"output\\\" -> SelectFirst[rescaled, sameCountyQ[#1, s] &, <|\\\"output\\\" -> 0|>][\\\"output\\\"]|>]], \\n        shps];\\n    Graphics[\\n        Flatten@Map[\\n            {ColorData[\\\"GreenBrownTerrain\\\"][#output], #[\\\"Graphics\\\"]} &,\\n            out\\n        ]\\n    ]\\n];\\n\\nmyGeoDistance[from_, to_]:=myGeoDistance[from, to]=QuantityMagnitude[GeoDistance[from, to]];\\n\\ngetCostsByCapacity[deployments_, biorefinery_, counties_List, max_:2*^6]:=Module[{sortedCountiesByDistance, gatheredBiomass},\\n    sortedCountiesByDistance = SortBy[counties, myGeoDistance[Values@#[[{\\\"Lat\\\", \\\"Lon\\\"}]], Values@deployments[[{\\\"Lat\\\", \\\"Lon\\\"}]]] &];\\n    gatheredBiomass = gatherBiomass[{}, deployments, biorefinery, sortedCountiesByDistance, max];\\n    Table[\\n        totalBiomass = Total[gatheredBiomass[[1;;g, \\\"Biomass\\\"]]];\\n        totalProduct = Total[gatheredBiomass[[1;;g, \\\"Biomass\\\"]]]*gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"product units\\\"];\\n        collectionCosts = Total[gatheredBiomass[[1;;g, \\\"Collection Cost\\\"]]*gatheredBiomass[[1;;g, \\\"Biomass\\\"]]];\\n        deliveryCosts = Total[gatheredBiomass[[1;;g, \\\"Delivery Cost\\\"]]*gatheredBiomass[[1;;g, \\\"Biomass\\\"]]];\\n        capitalCosts = 0.13*biorefineryCost[totalBiomass, gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"capacity\\\"]*gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"cost capital\\\"]];\\n        operatingCosts = gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"cost operating\\\"];\\n        {\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], collectionCosts\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], deliveryCosts\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], operating\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], capitalCosts\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], (collectionCosts + deliveryCosts + capitalCosts + operatingCosts)\/totalProduct}    \\n        },\\n        {g, Length@gatheredBiomass}\\n    ]\/\/ Transpose \/\/ AssociationThread[{\\n            \\\"Collection\\\",\\n            \\\"Delivery\\\",\\n            \\\"Operating\\\",\\n            \\\"Capital\\\",\\n            \\\"Total\\\"}->#]&\\n];\\n\\ngetLowestCostByCapacity[deployments_, biorefinery_, counties_List, max_:2*^6]:=Module[{sortedCountiesByDistance, gatheredBiomass},\\n    sortedCountiesByDistance = SortBy[counties, GeoDistance[Values@#[[{\\\"Lat\\\", \\\"Lon\\\"}]], Values@deployments[[{\\\"Lat\\\", \\\"Lon\\\"}]]] &];\\n    gatheredBiomass = gatherBiomass[{}, deployments, biorefinery, sortedCountiesByDistance, max];\\n    pastCost = 1*^9;\\n    optimalCapacity = 0;\\n    Table[\\n        totalBiomass = Total[gatheredBiomass[[1;;g, \\\"Biomass\\\"]]];\\n        totalProduct = Total[gatheredBiomass[[1;;g, \\\"Biomass\\\"]]]*gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"product units\\\"];\\n        collectionCosts = Total[gatheredBiomass[[1;;g, \\\"Collection Cost\\\"]]*gatheredBiomass[[1;;g, \\\"Biomass\\\"]]];\\n        deliveryCosts = Total[gatheredBiomass[[1;;g, \\\"Delivery Cost\\\"]]*gatheredBiomass[[1;;g, \\\"Biomass\\\"]]];\\n        capitalCosts = 0.13*biorefineryCost[totalBiomass, gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"capacity\\\"]*gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"cost capital\\\"]];\\n        operatingCosts = gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"cost operating\\\"];\\n        totalCost = (collectionCosts + deliveryCosts + capitalCosts + operatingCosts)\/totalProduct;\\n        If[totalCost > pastCost*1.10, optimalCost = pastCost; Return[];, pastCost = totalCost];\\n        {\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], collectionCosts\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], deliveryCosts\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], operating\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], capitalCosts\/totalProduct},\\n            {totalBiomass\/ gatheredBiomass[[g]][\\\"Biorefinery\\\"][\\\"operating days\\\"], totalCost}    \\n        },\\n        {g, Length@gatheredBiomass}\\n    ]\/\/ Transpose \/\/ AssociationThread[{\\n            \\\"Collection\\\",\\n            \\\"Delivery\\\",\\n            \\\"Operating\\\",\\n            \\\"Capital\\\",\\n            \\\"Total\\\"}->#]&\\n];\\n\\n\\n\\ntotalProduction[counties_]:=Total[counties[[All, \\\"Production\\\"]]*toTonnes\/@counties[[All, \\\"Production Unit\\\"]]];\\n\\ngetClusters[counties_, n_:30]:=Module[{},\\n    FindClusters[\\n        Values[counties[[All, {\\\"Lat\\\", \\\"Lon\\\", \\\"Production\\\"}]]] -> counties,\\n        n,\\n        \\\"Method\\\" -> \\\"KMeans\\\"\\n        ] \/\/ Map[Association, #,{2}] & \/\/\\n        SortBy[#, N@Mean[#[[All, \\\"Production\\\"]]] &] & \/\/ Reverse\\n];\\n\\n\\nbtToBilt = <|\\n    \\\"Corn\\\" -> {\\\"Corn stover\\\", \\\"AtJ-SPK\\\"}, \\n    \\\"Idle Land\\\" -> {\\\"\\\",\\\"\\\"}, \\n    \\\"Barley\\\" -> {\\\"Barley straw\\\", \\\"AtJ-SPK\\\"},\\n    \\\"Soybeans\\\" -> {\\\"\\\",\\\"\\\"}, \\n    \\\"Hay\\\" -> {\\\"Wheat straw\\\", \\\"FT-SPK\\\"}, \\n    \\\"Rice\\\" -> {\\\"Wheat straw\\\", \\\"FT-SPK\\\"},\\n    \\\"Pastureland available\\\" -> {\\\"\\\",\\\"\\\"},\\n    \\\"Cotton\\\" -> {\\\"\\\",\\\"\\\"}, \\n    \\\"Wheat\\\" -> {\\\"Wheat straw\\\", \\\"FT-SPK\\\"}\\n|>;\\n\\n\\n\\n\\n\\n(* feedstockByWeight = SemanticImport[\\\".\/\\\" <> \\\"data\/feedstockWeights.csv\\\", {String, Real, Real, Real, Real, Real}, \\\"NamedRows\\\", Delimiters -> \\\",\\\"]; *)\\nfilterByFeedstockWeight[counties_, biorefineries_, s_, placed_]:=Module[{},\\n    largestResources = Select[feedstockByWeight[[All, \\\"Feedstock\\\"]], Total[counties[[All, #]]] > 50000 &];\\n\\n    choices = Flatten@Table[\\n        weights = Map[\\n            Function[{bio},\\n            SelectFirst[\\n                feedstockByWeight, \\n                #[\\\"Feedstock\\\"] == resource && KeyExistsQ[#, bio[\\\"product\\\"]]  &, <|bio[\\\"product\\\"] -> 0|>][bio[\\\"product\\\"]]], biorefineries];\\n\\n        RandomChoice[weights->biorefineries, 1],\\n        {resource, largestResources}\\n    ];\\n\\n    choices\\n];\\n\\n\\n\\n\\nfilterByWeights[counties_, biorefineries_, s_, placed_]:=Module[{},\\n    Break[]\\n]\\n\\nfilterBySmallestCost[counties_, biorefineries_, s_, placed_]:=TakeSmallestBy[\\n            Select[\\n                Association@Map[#->If[\\n                    KeyExistsQ[counties[[1]], #[\\\"feedstock\\\"]],\\n                    biorefineryCost[s, counties[[1;;2]], #],\\n                    {0, 1*^9}] &, biorefineries],\\n                    #[[1]] > 100 &]\\n                    , #[[2]] &, 1] \/\/ Keys \\n\\n\\n\\ncapitalCost[m_, m0_, c0_, n_:0.7, i_:0.13]:=i*c0*(m\/m0)^n\\ncollectionCost[m_, cf0_:3.103, cv0_, y0_:3200, f0_:0.6, t_:1.5]:=m*cf0 + m*cv0*t*Sqrt[m\/(Pi*y0*f0)]\\ndeliveryCost[m_, d_, d0_:25, c0_:0.71, m0_:2000*330, t_:1.5]:=t*m*c0*(d+5)\\noperatingCost[m_, m0_,o0_]:=o0*(m\/m0)\\n\\n(* \\n    co2 [tonnes\/day]\\n    c0 [$ millions] capital cost\\n    op0 [kW\/kg-hr] electricity consumption\\n*)\\nco2CaptureCost[co2_, co20_:5391.09, c0_:233.92, n_:0.61, op0_:0.064, i_:0.13]:=(1*^6*i*c0*((co2\/1000)\/co20)^n + op0*co2*24*0.064) \\nco2CompressionCost[co2_, co20_:4848.94, c0_:30.38, n_:0.77, op0_:0.073, i_:0.13]:=(1*^6*i*c0*((co2\/1000)\/co20)^n + op0*co2*24*0.064)\\nh2liquefactionCost[h2_, c0_:7.23, n_:0.8, op0_:8.763]:=(1*^6*c0*(h2)^n + op0*h2*1000\/24)\\n\\n\\n\\nbiorefineryCost[site_List, counties_, biorefinery_, capacity_?NumberQ]:=Module[{\\n    sortedCounties, costs, sites,m,  o, cap, c, d,p, co2cap, co2comp\\n    }, \\n    sortedCounties = SortBy[counties, (#[\\\"Lat\\\"]-site[[1]])^2+(#[\\\"Lon\\\"]-site[[2]])^2 &][[1;;UpTo@300]];\\n\\tcosts = costsBySite[site, sortedCounties, biorefinery, capacity, 0, {}];\\n\\tsites = costs[[All,1]];\\n\\tm = costs[[All,2]];\\n\\tp = Total[m]*biorefinery[\\\"conversion\\\"]+1.0;\\n\\to = operatingCost[capacity, 2000*330, biorefinery[\\\"cost operating\\\"]];\\n\\tcap = capitalCost[capacity, 2000*330, biorefinery[\\\"cost capital\\\"], 0.7, 0.13];\\n\\n    co2c = If[biorefinery[\\\"co2 captured\\\"]>0, biorefinery[\\\"co2 captured\\\"], 0];\\n    co2p = If[biorefinery[\\\"co2 production\\\"]>0, biorefinery[\\\"co2 production\\\"], 0];\\n\\n\\n    co2cap = co2CaptureCost[(co2c + co2p)*p\/(330)];\\n    co2comp = co2CompressionCost[(co2c + co2p)*p\/330];\\n    (* h2liquefaction = h2liquefactionCost[biorefinery[\\\"h2 liquefaction\\\"]*p]; *)\\n\\tc = Total@costs[[All,3]];\\n\\td = Total@costs[[All,4]];\\n\\n    {sites, m, (c+d+o+cap+co2cap+co2comp)\/p, c\/p, d\/p, o\/p,cap\/p,co2cap\/p,co2comp\/p}\\n];\\n\\ncostsBySite[site_List, counties_, biorefinery_Association,capacity_, gathered_, costs_]:=Module[{nearestCounty, availableFeedstock, newFeedstock, c, d, p},\\n\\tIf[(gathered >= capacity) || (counties == {}),\\n\\t\\tcosts,\\n\\t\\t\\n\\t\\tnearestCounty = First@counties;\\n\\t\\tavailableFeedstock = Total[Values@nearestCounty[[Flatten@Values@biorefineryFeedstocks[biorefinery]]]]+1.0;\\n\\t\\tnewFeedstock = If[gathered +availableFeedstock > capacity,  capacity-gathered, availableFeedstock];\\n\\t\\tc = collectionCost[newFeedstock, biorefinery[\\\"cost transportation fixed\\\"], biorefinery[\\\"cost transportation variable\\\"]];\\n\\t\\td = deliveryCost[newFeedstock, QuantityMagnitude@GeoDistance[site, Values[nearestCounty[[{\\\"Lat\\\", \\\"Lon\\\"}]]]]];\\n\\t\\tp = biorefinery[\\\"conversion\\\"]*(gathered + newFeedstock);\\n\\t\\tCheck[costsBySite[site, Rest@counties, biorefinery, capacity, gathered+newFeedstock, \\n\\t\\t\\tAppend[costs,\\n\\t\\t\\t{nearestCounty, newFeedstock,c,d}]],\\n            costs]\\n\\t]\\t\\n]\\n\\n\\nplotBiorefineryCostByCapacity[site_, counties_,biorefinery_, min_, max_]:=Module[{},\\n\\tListPlot[\\n\\t\\tTranspose@Table[\\n\\t\\t\\tTake[biorefineryCost[site, counties, biorefinery, x],{4,9}],\\n\\t\\t{x, min, max, 100000}],\\n\\t\\tPlotLabels -> {\\\"Collection\\\",\\\"Delivery\\\",\\\"Operating\\\",\\\"Capital\\\", \\\"CO2 Capture\\\", \\\"CO2 Compression\\\"},\\n\\t\\tPlotRange->All\\n\\t]\\n]\\n\\n\\n\\n\\n\\noptimalBiorefineryCapacityCost[site_List, counties0_, biorefinery_] :=\\n    Module[{f, result, sol},\\n        f[x0_?NumericQ] :=\\n            (\\n                result = biorefineryCost[site, counties0, biorefinery, x0];\\n                result[[3]]\\n            );\\n        sol = Quiet@FindMinimum[f[x1], {x1, 720000, 10000, 720000*10}];\\n        <|\\\"site\\\" -> site, \\n        \\\"counties\\\" -> result[[1]], \\n        \\\"Capacity\\\" -> Total[result[[2]]] \/ 330.0, \\n        \\\"Biofuel Cost\\\" -> result[[3]], \\n        \\\"Biofuel Out\\\" -> Total[result[[2]]]*biorefinery[\\\"conversion\\\"], \\\"Feedstock\\\" -> biorefinery[\\\"feedstock\\\"], \\n        \\\"Product\\\" -> biorefinery[\\\"product\\\"], \\\"Biorefinery\\\" -> biorefinery, \\\"CO2\\\" -> Total[result[[2]]]*biorefinery[\\\"co2 captured\\\"]|>\\n    ];\\n\\njetFuelFirst[counties_, biorefineries_, site_, placed_] :=\\n    Module[{},\\n        aviationBiorefineries = Select[placed, #[[\\\"Biorefinery\\\", \\\"product\\\"\\n            ]] == \\\"AtJ-SPK\\\"&];\\n        If[Total[330 * aviationBiorefineries[[All, \\\"Capacity\\\"]] * aviationBiorefineries\\n            [[All, \\\"Biorefinery\\\", \\\"conversion\\\"]]] < 650*^6,\\n            Select[biorefineries, (#[\\\"product\\\"] == \\\"AtJ-SPK\\\")&]\\n            ,\\n            Select[biorefineries, !(#[\\\"product\\\"] == \\\"AtJ-SPK\\\")&]\\n        ]\\n    ];\\n\\nfilterJetFuelFirstThenByWeight[counties_, biorefineries_, site_, placed_\\n    ] :=\\n    Module[{},\\n        aviationBiorefineries = Select[placed, #[[\\\"Biorefinery\\\", \\\"product\\\"\\n            ]] == \\\"AtJ-SPK\\\"&];\\n        If[Total[aviationBiorefineries[[All, \\\"Biofuel Out\\\"]]] < 650*^6,\\n            \\n            Select[biorefineries, (#[\\\"product\\\"] == \\\"AtJ-SPK\\\")&]\\n            ,\\n            filterByFeedstockWeight[counties, Select[biorefineries, !\\n                (#[\\\"product\\\"] == \\\"AtJ-SPK\\\")&], site, placed]\\n        ]\\n    ];\\n\\nPlaceRefineries::usage = \\\"PlaceRefineries[counties, sites, filter, biorefineries] places biorefineries in sites, based on the counties and the filter. The filter is a function that takes the counties and biorefineries and returns, for example, the \\\\\\\"smallest cost\\\\\\\", \\\\\\\"random weight\\\\\\\", or \\\\\\\"smallest cost and random weight\\\\\\\". The result is an association of sites and the gathered results (counties, total capacity, cost, and biorefinery).\\\";\\n\\nPlaceRefineries[data_, sites_, filter_, biorefineries_, minCapacity_:\\n    30000] :=\\n    Module[{obc, nb0},\\n        gs = {};\\n        results07 =\\n            Flatten[\\n                Table[\\n                    rs = Complement[data, Flatten[gs[[All, \\\"counties\\\"\\n                        ]]]];\\n                    ns = SortBy[rs, (#[\\\"Lat\\\"] - s[[1]]) ^ 2 + (#[\\\"Lon\\\"\\n                        ] - s[[2]]) ^ 2&];\\n                    nb0 = Take[ns, UpTo[25]];\\n                    If[Length @ nb0 > 0,\\n                        sb = filter[nb0, biorefineries, s, gs];\\n                        Map[\\n                            (\\n                                obc = optimalBiorefineryCapacityCost[\\n                                    s, nb0, #];\\n                                AppendTo[gs, obc];\\n                                obc\\n                            )&\\n                            ,\\n                            sb\\n                        ]\\n                        ,\\n                        {<|\\\"Capacity\\\" -> 0|>}\\n                    ]\\n                    ,\\n                    {s, sites}\\n                ]\\n                ,\\n                1\\n            ];\\n        Select[results07, #[[\\\"Capacity\\\"]] * 330 > minCapacity&]\\n    ];\\n\\ngatherBiomass[counties_, biorefinery_, n_:1, r0_:Infinity] :=\\n    Module[{m, p, r, gathered, site, sources, co2c},\\n        site = SpatialMedian[Values @ counties[[1 ;; n, {\\\"Lat\\\", \\\"Lon\\\"\\n            }]]];\\n        feedstocks = Values@biorefineryFeedstocks[biorefinery];\\n        sources = counties[[1 ;; n]];\\n        {m, r} = biorefineryCost[site, sources, biorefinery];\\n        co2c = m * biorefinery[\\\"co2 captured\\\"];\\n        p = m * biorefinery[\\\"conversion\\\"];\\n        gathered = <|\\\"site\\\" -> site, \\\"counties\\\" -> sources, \\\"Capacity\\\"\\n             -> m \/ 330.0, \\\"Biofuel Cost\\\" -> r, \\\"Product\\\" -> p, \\\"Biorefinery\\\" -> \\n            biorefinery, \\\"CO2\\\" -> co2c|>;\\n        If[And[r < 1.1 * r0, m < 4.5*^6, n < 20],\\n            gatherBiomass[counties, biorefinery, n + 1, r]\\n            ,\\n            gathered\\n        ]\\n    ];\\n\\n\\nGroupBiorefineriesBy[results_, category_, value_]:=GroupBy[results, \\n    #[\\\"Biorefinery\\\"][category] &,\\n    Map[\\n        GeoPosition[#[[\\\"site\\\"]]] -> #[value] &\\n    ]\\n]\\n\\nGroupBiorefineriesByTwo[results_, category1_, category2_, value_]:=GroupBy[results, \\n    {#[\\\"Biorefinery\\\"][category1], #[\\\"Biorefinery\\\"][category2]} &,\\n    Map[\\n        GeoPosition[#[[\\\"site\\\"]]] -> #[value] &\\n    ]\\n]\\n\\nSummarizeBiorefineriesBy[results_, category_, value_, function_]:= Map[\\n        function[#[[All, 2]]] &,\\n        GroupBiorefineriesBy[results, category, value]\\n    ];\\n\\nChartBiorefineriesBy[groups_]:=GeoBubbleChart[\\n    groups,\\n    GeoRange -> Entity[\\\"Country\\\", \\\"UnitedStates\\\"],\\n    ChartStyle -> 2,\\n    BubbleSizes->{0.03, 0.1},\\n    ChartLegends -> {Placed[\\n        SwatchLegend[\\n            MapIndexed[ColorData[2][#2[[1]]] &, Keys@groups],\\n            Keys[groups],\\n            LegendLayout -> {\\\"Column\\\", 1},\\n            Background -> White,\\n            LegendFunction -> Frame,\\n            LegendLabel -> \\\"Group\\\",\\n            LabelStyle -> 20\\n        ], {0.9, 0.2}],\\n        Placed[\\n        PointLegend[\\n            {Gray, Gray, Gray},\\n            (NumberForm[#, {3,0}] &\/@{\\n                Min[Flatten@Values@groups[[All, All, 2]]],\\n                Median[Flatten@Values@groups[[All, All, 2]]],\\n                Max[Flatten@Values@groups[[All, All, 2]]]\\n            }),\\n            LegendLayout -> {\\\"Column\\\", 1},\\n            LegendMarkerSize -> {30, 50, 100},\\n            Background -> White,\\n            LegendFunction -> Frame,\\n            LegendLabel -> \\\"Capacity (MTPD)\\\",\\n            LabelStyle -> 20\\n        ], {0.1, 0.2}]},\\n    ImageSize -> 20*72\\n];\\n\\n\\npostResults[results_, label_]:= Module[{},\\n    byFeedstockCapacity  = GroupBiorefineriesBy[results, \\\"feedstock\\\", \\\"Capacity\\\"];\\n    byFeedstockCost = GroupBiorefineriesBy[results, \\\"feedstock\\\", \\\"Biofuel Cost\\\"];\\n    byProductCapacity = GroupBiorefineriesBy[results, \\\"product\\\", \\\"Capacity\\\"];\\n\\n    totalsByFeedstockCapacity = SummarizeBiorefineriesBy[results, \\\"feedstock\\\", \\\"Capacity\\\",  Total];\\n    meansByProductCost = SummarizeBiorefineriesBy[results, \\\"product\\\", \\\"Biofuel Cost\\\", Mean];\\n\\n    byFeedstockProductCapacity = GroupBiorefineriesByTwo[results, \\\"feedstock\\\", \\\"product\\\", \\\"Capacity\\\"];\\n\\n    KeyValueMap[\\n        Function[{k, v} , Flatten@{k, Min[v[[All, 2]]], Mean[v[[All, 2]]], Max[v[[All, 2]]]}], byFeedstockProductCapacity] \/\/ SortBy[Last] \/\/ Reverse \/\/ Grid;\\n\\n    DistributionChart[\\n        byProductCapacity[[All,All,2]],\\n        BarOrigin -> Left,\\n        ChartLabels -> KeyValueMap[Function[{k,v} , k <> \\\" (\\\" <> \\n        ToString[NumberForm[Mean[v[[All, 2]]], {2,1}]] <> \\n        \\\"\\\\[PlusMinus] \\\" <>  \\n        ToString[\\n        NumberForm[\\n        If[Length[v[[All,2]]]>2,StandardDeviation[v[[All, 2]]],0], {2,1}]] <> \\\")\\\"], byProductCapacity],\\n        ChartElementFunction -> \\\"Quantile\\\",\\n        Frame -> True,\\n        FrameLabel -> {\\\"Biorefinery Capacity (MTPD)\\\", None},\\n        ImageSize -> 15*72\\n    ]  \/\/ Export[FileNameJoin[{\\\".\/\\\" , \\\"..\\\",  \\\"figures\\\" , label , \\\"_biorefinery_capacity_by_product_histogram.png\\\"}], #] &;\\n\\n    DistributionChart[\\n        byProductCapacity[[All, All, 2]],\\n        BarOrigin -> Left,\\n        ChartLabels -> KeyValueMap[Function[{k,v} , k <> \\\" (\\\" <> ToString[NumberForm[Mean[v[[All, 2]]], {2,1}]] <> \\\"\\\\[PlusMinus] \\\" <>  ToString[NumberForm[\\n        If[Length[v[[All,2]]]>2,StandardDeviation[v[[All, 2]]],0], {2,1}]] <> \\\")\\\"], byProductCapacity],\\n        ChartElementFunction -> \\\"Quantile\\\",\\n        Frame -> True,\\n        FrameLabel -> {\\\"Biorefinery Capacity (MTPD)\\\", None},\\n        ImageSize -> 15*72\\n    ]  \/\/ Export[FileNameJoin[{\\\".\/\\\" , \\\"..\\\",  \\\"figures\\\" , label , \\\"_biorefinery_capacity_by_product_histogram.png\\\"}], #]  &;\\n\\n    plot1 = ChartBiorefineriesBy[byFeedstockCapacity];\\n    plot1 \/\/ Export[FileNameJoin[{\\\".\/\\\" , \\\"..\\\",  \\\"figures\\\" , label ,  \\\"_map_by_feedstock.png\\\"}], #] &;\\n    plot2 = ChartBiorefineriesBy[byProductCapacity];\\n    plot2  \/\/ EExport[FileNameJoin[{\\\".\/\\\" , \\\"..\\\",  \\\"figures\\\" , label ,  \\\"_map_by_fuel.png\\\"}], #] &;\\n\\n    grouped = GroupBy[results,\\n        #[\\\"Biorefinery\\\"][\\\"feedstock\\\"] &\\n    ];\\n\\n    g= KeyValueMap[\\n        Function[{k, v} ,\\n        ListPlot[\\n            v[[All, {\\\"Capacity\\\", \\\"Biofuel Cost\\\"}]],\\n            PlotLabel -> k,\\n            ImageSize -> 10*72\\n        ]],\\n        grouped\\n    ];\\n\\n\\n    grouped = GroupBy[\\n            results,\\n            #[\\\"Biorefinery\\\"][\\\"product\\\"] &,\\n            #[[All, \\\"Capacity\\\"]] &\\n        ];\\n\\n    Histogram[\\n        grouped,\\n        ChartLegends -> SwatchLegend[\\n            Keys@grouped\\n        ],\\n        Frame -> True,\\n        FrameLabel -> {\\\"Capacity (MTPD)\\\", \\\"Biorefineries\\\"},\\n        ChartStyle -> 1,\\n        PlotRange -> {All, All},\\n        ImageSize -> 10*72\\n    ] \/\/ Export[FileNameJoin[{\\\".\/\\\" , \\\"..\\\",  \\\"figures\\\" , label ,  \\\"_capacity_histogram.png\\\"}], #] &;\\n\\n    byFeedstockProductCapacityCounts=Flatten[KeyValueMap[\\n        {StringRiffle[#1,\\\"-\\\"],\\n        HistogramList[\\n        #2[[All,2]],{{0,1000,2000,3000,4000,5000,10000,15000}}][[2]]}&,\\n        KeySort[byFeedstockProductCapacity]],{1}];\\n\\n    byFeedstockProductCapacityCountsSorted = SortBy[byFeedstockProductCapacityCounts, Total[#[[2]]]&];\\n    BarChart[\\n        byFeedstockProductCapacityCountsSorted[[All,2]],\\n        ChartLayout -> \\\"Stacked\\\",\\n        ChartLabels->{byFeedstockProductCapacityCountsSorted[[All,1]],None},\\n        BarOrigin->Left,\\n        Frame->True,\\n        FrameLabel->{None,\\\"Biorefinery Counts\\\"},\\n        ChartLegends->SwatchLegend[sizes[[1]],LegendLabel->\\\"Biorefinery\\\\nCapacities\\\\n(MTPD)\\\"],\\n        ImageSize->15*72\\n    ]\/\/ Export[FileNameJoin[{\\\".\/\\\" , \\\"..\\\",  \\\"figures\\\" , label ,  \\\"_capacity_counts.png\\\"}], #] &;\\n\\n    capByCost = GroupBy[\\n        results,\\n        #[\\\"Biorefinery\\\"][\\\"product\\\"] &,\\n        #[[All, {\\\"Capacity\\\", \\\"Biofuel Cost\\\"}]] &\\n    ];\\n\\n    linearFits = Map[\\n        NonlinearModelFit[Select[Values@#1, #[[2]] < 30 &], a*x^(n-1), {a,n},x] &,\\n        capByCost\\n    ];\\n\\n    p1 = ListPlot[\\n        Values\/@capByCost,\\n        PlotLegends -> Automatic,\\n        Frame -> True,\\n        FrameLabel -> {\\\"Biorefinery Capacity (MTPD)\\\", \\\"Biofuel Cost ($\/gallon)\\\"},\\n        LabelStyle -> 30,\\n        ImageSize -> 10*72\\n    ] ;\\n\\n    p2 = Plot[\\n            Evaluate@Table[l[x], {l, linearFits}],\\n            {x, 10, 1600},\\n            PlotStyle -> Dashed\\n        ];\\n\\n    Show@@{p1, p2}\\n\\n    \\n];\\n\\n\\n\\n\\n\\n\", \"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl\"]]",
		"icon":"file-code",
		"location":{
			"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/functions.wl"
		},
		"collapsibleState":1
	},
	{
		"name":"Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type",
		"kind":"String",
		"definition":"\"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl\"",
		"children":[
			{
				"name":"biomass",
				"kind":"List",
				"definition":"biomass",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl",
					"range":{
						"start":{
							"line":12,
							"character":0
						},
						"end":{
							"line":12,
							"character":7
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[biomass]",
				"icon":"symbol-array",
				"collapsibleState":1
			},
			{
				"name":"biorefineries",
				"kind":"List",
				"definition":"biorefineries",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl",
					"range":{
						"start":{
							"line":15,
							"character":0
						},
						"end":{
							"line":15,
							"character":13
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[biorefineries]",
				"icon":"symbol-array",
				"collapsibleState":1
			},
			{
				"name":"biorefineriesByGroup",
				"kind":"Symbol",
				"definition":"biorefineriesByGroup",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl",
					"range":{
						"start":{
							"line":20,
							"character":0
						},
						"end":{
							"line":20,
							"character":20
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[biorefineriesByGroup]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"n",
				"kind":"Symbol",
				"definition":"n",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl",
					"range":{
						"start":{
							"line":40,
							"character":0
						},
						"end":{
							"line":40,
							"character":1
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[n]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"n",
				"kind":"Symbol",
				"definition":"n",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl",
					"range":{
						"start":{
							"line":46,
							"character":4
						},
						"end":{
							"line":46,
							"character":5
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[n]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"counties",
				"kind":"Symbol",
				"definition":"counties",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl",
					"range":{
						"start":{
							"line":48,
							"character":4
						},
						"end":{
							"line":48,
							"character":12
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[counties]",
				"icon":"symbol-variable",
				"collapsibleState":1
			},
			{
				"name":"allresults",
				"kind":"Symbol",
				"definition":"allresults",
				"location":{
					"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl",
					"range":{
						"start":{
							"line":45,
							"character":0
						},
						"end":{
							"line":45,
							"character":10
						}
					}
				},
				"children":[],
				"lazyload":"symbolToTreeItem2[allresults]",
				"icon":"symbol-variable",
				"collapsibleState":1
			}
		],
		"lazyload":"Map[symbolToTreeItem2, getSymbols[\"(* ::Package:: *)\\n\\n(* ::Title:: *)\\n(*Optimal biorefinery scales*)\\n\\n\\n(* ::Text:: *)\\n(*The purpose of this file is to determine the optimal scale for every biorefinery at each county*)\\n\\n\\nGet[NotebookDirectory[]<>\\\"functions.wl\\\"];\\n\\nbiomass = Import[FileNameJoin[{NotebookDirectory[] ,\\\"..\\\", \\\"data\\\",\\\"biomass.mx\\\"}]];\\n(* billionTon=Import[NotebookDirectory[] <> \\\"..\/data\/billionton_county.csv\\\",\\\"CSV\\\"]; *)\\n\\nbiorefineries = Select[\\n    loadBILT[FileNameJoin[{NotebookDirectory[], \\\"..\\\", \\\"data\\\",\\\"Example BILT biomass allocation calculation_220316.xlsx\\\"}]],\\n    MemberQ[{\\\"FT-SPK\\\", \\\"AtJ-SPK\\\", \\\"FT-Diesel\\\", \\\"FT-Gasoline\\\", \\\"EtOH\\\"},\\n    #[\\\"product\\\"]]&];\\n\\nbiorefineriesByGroup = KeyValueMap[\\n    Function[{k,v},\\n        SelectFirst[\\n            biorefineries,\\n            MemberQ[feedstockGroups[k], #[\\\"feedstock\\\"]] &&\\n            #[\\\"product\\\"]==v &,\\n            \\\"No Biorefinery\\\"\\n        ]\\n    ],\\n    <|\\n\\\"Forestry\\\"->\\\"FT-SPK\\\",\\n\\\"Straws\\\" -> \\\"AtJ-SPK\\\",\\n\\\"Switchgrass\\\" -> \\\"FT-SPK\\\",\\n\\\"Agriculture\\\" -> \\\"AtJ-SPK\\\",\\n\\\"Wood\\\" -> \\\"FT-SPK\\\",\\n\\\"MSW\\\" -> \\\"AtJ-SPK\\\"\\n|>\\n] \/\/ DeleteCases[#, \\\"No Biorefinery\\\"]&;\\n\\n\\nn = 1;\\n\\nLaunchKernels[4] \/\/ Length\\n\\n\\nallresults = ParallelTable[\\n    n=n+1;\\n   (* Print[N[n\/(Length@biorefineriesByGroup*Length@biomass)]];*)\\n    counties = biomass;\\n    Flatten@{   \\n        b[\\\"feedstock\\\"],\\n        b[\\\"product\\\"],\\n        Values[\\n            optimalBiorefineryCapacityCost[\\n                Values[c[[{\\\"Lat\\\",\\\"Lon\\\"}]]],\\n                biomass,\\n            b][[{\\\"Capacity\\\",\\\"Biofuel Cost\\\",\\\"CO2\\\"}]]],\\n     c[\\\"Lat\\\"], c[\\\"Lon\\\"]},\\n    {b, biorefineriesByGroup[[1;;]]},{c, biomass[[1;;]]}] ;\\n\\nExport[FileNameJoin[{NotebookDirectory[], \\\"results.mx\\\"}], allresults];\\n\\nExport[FileNameJoin[{NotebookDirectory[], \\\"results.csv\\\"}], Flatten[allresults,1]];\\n\\n\\n\", \"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl\"]]",
		"icon":"file-code",
		"location":{
			"uri":"file:\/\/\/Users\/mark\/Projects\/National%20Getting%20to%20Negative\/code\/Biorefinery%20Scale%20Analysis%20By%20Feedstock%20Type.wl"
		},
		"collapsibleState":1
	}
]